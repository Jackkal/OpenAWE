name: Build OpenAWE
on: ['push', 'pull_request']

env:
  BUILD_TYPE: Release
  VCPKG_DEFAULT_TRIPLET: x64-windows

jobs:
  build:
    strategy:
      matrix:
        include:
          - name: Linux GCC
            os: ubuntu-20.04
            extra_cmake_args: -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          - name: Linux Clang
            os: ubuntu-20.04
            extra_cmake_args: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          - name: Windows MSVC
            os: windows-2019
            extra_cmake_args: -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Install dependencies with APT
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            libtinyxml2-dev \
            zlib1g-dev \
            libgl-dev \
            libglfw3-dev \
            libopenal-dev \
            libglm-dev \
            libbullet-dev \
            libfmt-dev \
            libogg-dev \
            libtheora-dev \
            libvorbis-dev \
            libspdlog-dev \
            libglew-dev \
            libgtest-dev

      - name: Install dependencies with vcpkg
        if: ${{ matrix.os == 'windows-2019' }}
        run: |
          vcpkg update
          vcpkg install zlib glfw3 libogg libvorbis libtheora spdlog glew openal-soft bullet3 fmt gtest tinyxml2 glm opengl

      - name: Configure CMake
        shell: bash
        run: |
          cmake -B $GITHUB_WORKSPACE/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{ matrix.extra_cmake_args }} .

      - name: Build
        shell: bash
        run: cmake --build $GITHUB_WORKSPACE/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest -C ${{env.BUILD_TYPE}}

